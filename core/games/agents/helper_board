




NOTE: implement the k-map problem [[ find the simplest algebraic statement for a given function ]]
NOTE: logic circuit simplification (SOP and POS) and its problems like XOR problem ___ http://www.32x8.com/index.html
NOTE: try to extend algorithms using cython, ctypes, cffi or by writing an extension in C++ and rust - embedding python in C++ apps

=================================================================================================================================================

https://wiki.pathmind.com/deep-reinforcement-learning
https://towardsdatascience.com/not-so-deep-reinforcement-learning-for-dummies-part-2-854216d1fe0d
https://towardsdatascience.com/not-so-deep-reinforcement-learning-for-dummies-part-1-c22416a55535
https://towardsdatascience.com/the-ultimate-beginners-guide-to-reinforcement-learning-588c071af1ec
https://medium.com/@SmartLabAI/reinforcement-learning-algorithms-an-intuitive-overview-904e2dff5bbc
https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
https://www.deeplearningwizard.com/deep_learning/deep_reinforcement_learning_pytorch/bellman_mdp/
https://stable-baselines3.readthedocs.io/en/master/
https://magenta.tensorflow.org/2016/11/09/tuning-recurrent-networks-with-reinforcement-learning
https://www.kdnuggets.com/2020/05/deep-reinforcement-learning.html
https://developers.google.com/machine-learning/glossary/rl
https://www.geeksforgeeks.org/q-learning-in-python/
https://towardsdatascience.com/math-of-q-learning-python-code-5dcbdc49b6f6
https://www.learndatasci.com/tutorials/reinforcement-q-learning-scratch-python-openai-gym/
https://www.geeksforgeeks.org/ml-reinforcement-learning-algorithm-python-implementation-using-q-learning/?ref=rp
