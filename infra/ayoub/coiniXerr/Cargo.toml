[package]
name = "coiniXerr"
version = "0.1.0"
authors = ["wildonion <marefimoghaddam@unixerr.com>"]
edition = "2021"



[dependencies]
hyper = { version = "0.14", features = ["full"] }
reqwest = { version = "0.11", default-features = false, features = ["blocking", "json", "rustls-tls"] }
tokio = { version = "1", features = ["full"] }
libp2p = { version = "0.50", features = ["full"] }
tarpc = { version = "0.31", features = ["tokio1"] }
riker = "0.4.1"
riker-patterns = "0.4.2"
serde = {version = "1", features = ["derive"] }
futures-util = "0.3"
rayon = "1"
serde_json = "1"
uuid = { version = "1", features = ["serde", "v4"] }
chrono = { version = "0.4", features = ["serde"] }
log = "0.4"
dotenv = "0.15"
pretty_env_logger = "0.4.0"
log4rs = "1.1.1"
borsh = "0.9.3"
hex = "0.4"
futures = "0.3"
bcrypt = "0.1"
rust-argon2 = "1"
rand = "0.8"
clap = "4"
mongodb = "2"
is_type = "0.2.1"
capnp = "0.15.2"
lazy_static = "1.4.0"
async-trait = "0.1.58"
once_cell = "1.16.0"
redbpf = "2.3.0"




[build-dependencies]
capnpc = "0.15.2"



[lib]
# libraries don't have entry points, you can't run them,they're used for functionality sharing like binding a .wasm into js codes
# we need lib.rs and crate type of cdylib for none binary like .wasm, .so, .dylib and .dll files or for tests
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"
name = "daemon"


[build]
# a linker is an important utility program that takes the object files, produced by the assembler and compiler, and other code to join them into a single executable file
rustflags = ["-C", "link-args=-s"] # c linker to produce shared object file




[[bin]]
name = "coiniXerr"
path = "src/node.rs"




[[bin]]
name = "ctest"
path = "src/tests/main.rs"